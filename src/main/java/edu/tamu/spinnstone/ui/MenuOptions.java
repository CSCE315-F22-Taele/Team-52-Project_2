package edu.tamu.spinnstone.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.ResultSet;
import java.util.Arrays;

import edu.tamu.spinnstone.models.OrderItem;
import edu.tamu.spinnstone.models.sql.Database;
import rx.Subscription;

public class MenuOptions {
    private JPanel MenuOptionCards;
    private JPanel pizzaTypeMenu;
    private JButton cheeseButton;
    private JButton a1ToppingButton;
    private JButton buildYourOwnButton;
    private JPanel pizzaCustomizationMenu;
    private JToggleButton STANDARDButton;
    private JToggleButton CAULIFLOWERButton;
    private JToggleButton ALFREDOButton;
    private JToggleButton TRADITIONALREDButton;
    private JToggleButton ZESTYREDButton;
    private JToggleButton NOSAUCEButton;
    private JToggleButton HOUSEBLENDButton;
    private JToggleButton PARMESANButton;
    private JToggleButton BBQSAUCEButton;
    private JToggleButton OLIVEOILButton;
    private JToggleButton DICEDHAMButton;
    private JToggleButton ITALIANSAUSAGEButton;
    private JToggleButton MEATBALLButton;
    private JToggleButton PEPPERONIButton;
    private JToggleButton SALAMIButton;
    private JToggleButton SMOKEDCHICKENButton;
    private JToggleButton BANANAPEPPERSButton;
    private JToggleButton BLACKOLIVESButton;
    private JToggleButton GREENPEPPERSButton;
    private JToggleButton JALAPENOSButton;
    private JToggleButton MUSHROOMSButton;
    private JToggleButton ONIONSButton;
    private JToggleButton PINEAPPLEButton;
    private JToggleButton ROASTEDGARLICButton;
    private JToggleButton SPINACHButton;
    private JToggleButton TOMATOESButton;
    private JPanel drinkMenu;
    private JButton BOTTLEDButton;
    private JButton WATERButton;
    private JButton GATORADEButton;
    private JButton FOUNTAINButton;

    private java.util.List<JToggleButton> pizzaOptions;
    private java.util.List<JToggleButton> sauceOptions;
    private java.util.List<JToggleButton> crustOptions;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MenuOptionCards = new JPanel();
        MenuOptionCards.setLayout(new CardLayout(0, 0));
        MenuOptionCards.setBackground(new Color(-1644826));
        pizzaTypeMenu = new JPanel();
        pizzaTypeMenu.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        pizzaTypeMenu.setBackground(new Color(-1644826));
        MenuOptionCards.add(pizzaTypeMenu, "pizzaType");
        cheeseButton = new JButton();
        cheeseButton.setBackground(new Color(-1644826));
        cheeseButton.setText("Cheese");
        pizzaTypeMenu.add(cheeseButton);
        a1ToppingButton = new JButton();
        a1ToppingButton.setBackground(new Color(-1644826));
        a1ToppingButton.setText("1 Topping");
        pizzaTypeMenu.add(a1ToppingButton);
        buildYourOwnButton = new JButton();
        buildYourOwnButton.setBackground(new Color(-1644826));
        buildYourOwnButton.setText("Build Your Own");
        pizzaTypeMenu.add(buildYourOwnButton);
        pizzaCustomizationMenu = new JPanel();
        pizzaCustomizationMenu.setLayout(new GridLayoutManager(7, 1, new Insets(0, 0, 0, 0), -1, -1));
        pizzaCustomizationMenu.setBackground(new Color(-1644826));
        MenuOptionCards.add(pizzaCustomizationMenu, "toppings");
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-1644826));
        pizzaCustomizationMenu.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new CardLayout(0, 0));
        panel2.setBackground(new Color(-1644826));
        panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(80, -1), null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setForeground(new Color(-16777216));
        label1.setHorizontalAlignment(0);
        label1.setText("CRUST");
        panel2.add(label1, "Card1");
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel3.setBackground(new Color(-1644826));
        panel1.add(panel3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        STANDARDButton = new JToggleButton();
        STANDARDButton.setBackground(new Color(-1644826));
        STANDARDButton.setText("STANDARD");
        panel3.add(STANDARDButton);
        CAULIFLOWERButton = new JToggleButton();
        CAULIFLOWERButton.setText("CAULIFLOWER");
        panel3.add(CAULIFLOWERButton);
        final Spacer spacer1 = new Spacer();
        pizzaCustomizationMenu.add(spacer1, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel4.setBackground(new Color(-1644826));
        pizzaCustomizationMenu.add(panel4, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new CardLayout(0, 0));
        panel5.setBackground(new Color(-1644826));
        panel4.add(panel5, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(80, -1), null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setForeground(new Color(-16777216));
        label2.setHorizontalAlignment(0);
        label2.setText("SAUCE");
        panel5.add(label2, "Card1");
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel6.setBackground(new Color(-1644826));
        panel4.add(panel6, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        ALFREDOButton = new JToggleButton();
        ALFREDOButton.setBackground(new Color(-1644826));
        ALFREDOButton.setText("ALFREDO");
        panel6.add(ALFREDOButton);
        TRADITIONALREDButton = new JToggleButton();
        TRADITIONALREDButton.setBackground(new Color(-1644826));
        TRADITIONALREDButton.setText("TRADITIONAL RED");
        panel6.add(TRADITIONALREDButton);
        ZESTYREDButton = new JToggleButton();
        ZESTYREDButton.setBackground(new Color(-1644826));
        ZESTYREDButton.setText("ZESTY RED");
        panel6.add(ZESTYREDButton);
        NOSAUCEButton = new JToggleButton();
        NOSAUCEButton.setBackground(new Color(-1644826));
        NOSAUCEButton.setText("NO SAUCE");
        panel6.add(NOSAUCEButton);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel7.setBackground(new Color(-1644826));
        pizzaCustomizationMenu.add(panel7, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new CardLayout(0, 0));
        panel8.setBackground(new Color(-1644826));
        panel7.add(panel8, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(80, -1), null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setForeground(new Color(-16777216));
        label3.setHorizontalAlignment(0);
        label3.setText("CHEESE");
        panel8.add(label3, "Card1");
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel9.setBackground(new Color(-1644826));
        panel7.add(panel9, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        HOUSEBLENDButton = new JToggleButton();
        HOUSEBLENDButton.setBackground(new Color(-1644826));
        HOUSEBLENDButton.setText("HOUSE BLEND");
        panel9.add(HOUSEBLENDButton);
        PARMESANButton = new JToggleButton();
        PARMESANButton.setBackground(new Color(-1644826));
        PARMESANButton.setText("PARMESAN");
        panel9.add(PARMESANButton);
        final JPanel panel10 = new JPanel();
        panel10.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel10.setBackground(new Color(-1644826));
        pizzaCustomizationMenu.add(panel10, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel11 = new JPanel();
        panel11.setLayout(new CardLayout(0, 0));
        panel11.setBackground(new Color(-1644826));
        panel10.add(panel11, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(80, -1), null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setForeground(new Color(-16777216));
        label4.setHorizontalAlignment(0);
        label4.setText("DRIZZLE");
        panel11.add(label4, "Card1");
        final JPanel panel12 = new JPanel();
        panel12.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel12.setBackground(new Color(-1644826));
        panel10.add(panel12, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        BBQSAUCEButton = new JToggleButton();
        BBQSAUCEButton.setBackground(new Color(-1644826));
        BBQSAUCEButton.setText("BBQ SAUCE");
        panel12.add(BBQSAUCEButton);
        OLIVEOILButton = new JToggleButton();
        OLIVEOILButton.setBackground(new Color(-1644826));
        OLIVEOILButton.setText("OLIVE OIL");
        panel12.add(OLIVEOILButton);
        final JPanel panel13 = new JPanel();
        panel13.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel13.setBackground(new Color(-1644826));
        pizzaCustomizationMenu.add(panel13, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel14 = new JPanel();
        panel14.setLayout(new CardLayout(0, 0));
        panel14.setBackground(new Color(-1644826));
        panel13.add(panel14, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(80, -1), null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setForeground(new Color(-16777216));
        label5.setHorizontalAlignment(0);
        label5.setText("MEAT");
        panel14.add(label5, "Card1");
        final JPanel panel15 = new JPanel();
        panel15.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel15.setBackground(new Color(-1644826));
        panel13.add(panel15, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        DICEDHAMButton = new JToggleButton();
        DICEDHAMButton.setText("DICED HAM");
        panel15.add(DICEDHAMButton);
        ITALIANSAUSAGEButton = new JToggleButton();
        ITALIANSAUSAGEButton.setBackground(new Color(-1644826));
        ITALIANSAUSAGEButton.setText("ITALIAN SAUSAGE");
        panel15.add(ITALIANSAUSAGEButton);
        MEATBALLButton = new JToggleButton();
        MEATBALLButton.setBackground(new Color(-1644826));
        MEATBALLButton.setText("MEATBALL");
        panel15.add(MEATBALLButton);
        PEPPERONIButton = new JToggleButton();
        PEPPERONIButton.setBackground(new Color(-1644826));
        PEPPERONIButton.setText("PEPPERONI");
        panel15.add(PEPPERONIButton);
        final JPanel panel16 = new JPanel();
        panel16.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel16.setBackground(new Color(-1644826));
        panel13.add(panel16, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SALAMIButton = new JToggleButton();
        SALAMIButton.setBackground(new Color(-1644826));
        SALAMIButton.setText("SALAMI");
        panel16.add(SALAMIButton);
        SMOKEDCHICKENButton = new JToggleButton();
        SMOKEDCHICKENButton.setBackground(new Color(-1644826));
        SMOKEDCHICKENButton.setText("SMOKED CHICKEN");
        panel16.add(SMOKEDCHICKENButton);
        final JPanel panel17 = new JPanel();
        panel17.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel17.setBackground(new Color(-1644826));
        pizzaCustomizationMenu.add(panel17, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel18 = new JPanel();
        panel18.setLayout(new CardLayout(0, 0));
        panel18.setBackground(new Color(-1644826));
        panel17.add(panel18, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(80, -1), null, null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setForeground(new Color(-16777216));
        label6.setHorizontalAlignment(0);
        label6.setText("VEGGIES");
        panel18.add(label6, "Card1");
        final JPanel panel19 = new JPanel();
        panel19.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel19.setBackground(new Color(-1644826));
        panel17.add(panel19, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        BANANAPEPPERSButton = new JToggleButton();
        BANANAPEPPERSButton.setText("BANANA PEPPERS");
        panel19.add(BANANAPEPPERSButton);
        BLACKOLIVESButton = new JToggleButton();
        BLACKOLIVESButton.setBackground(new Color(-1644826));
        BLACKOLIVESButton.setText("BLACK OLIVES");
        panel19.add(BLACKOLIVESButton);
        GREENPEPPERSButton = new JToggleButton();
        GREENPEPPERSButton.setBackground(new Color(-1644826));
        GREENPEPPERSButton.setText("GREEN PEPPERS");
        panel19.add(GREENPEPPERSButton);
        JALAPENOSButton = new JToggleButton();
        JALAPENOSButton.setBackground(new Color(-1644826));
        JALAPENOSButton.setText("JALAPENOS");
        panel19.add(JALAPENOSButton);
        final JPanel panel20 = new JPanel();
        panel20.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel20.setBackground(new Color(-1644826));
        panel17.add(panel20, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        MUSHROOMSButton = new JToggleButton();
        MUSHROOMSButton.setBackground(new Color(-1644826));
        MUSHROOMSButton.setText("MUSHROOMS");
        panel20.add(MUSHROOMSButton);
        ONIONSButton = new JToggleButton();
        ONIONSButton.setBackground(new Color(-1644826));
        ONIONSButton.setText("ONIONS");
        panel20.add(ONIONSButton);
        PINEAPPLEButton = new JToggleButton();
        PINEAPPLEButton.setBackground(new Color(-1644826));
        PINEAPPLEButton.setText("PINEAPPLE");
        panel20.add(PINEAPPLEButton);
        ROASTEDGARLICButton = new JToggleButton();
        ROASTEDGARLICButton.setBackground(new Color(-1644826));
        ROASTEDGARLICButton.setText("ROASTED GARLIC");
        panel20.add(ROASTEDGARLICButton);
        final JPanel panel21 = new JPanel();
        panel21.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel21.setBackground(new Color(-1644826));
        panel17.add(panel21, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SPINACHButton = new JToggleButton();
        SPINACHButton.setBackground(new Color(-1644826));
        SPINACHButton.setText("SPINACH");
        panel21.add(SPINACHButton);
        TOMATOESButton = new JToggleButton();
        TOMATOESButton.setBackground(new Color(-1644826));
        TOMATOESButton.setText("TOMATOES");
        panel21.add(TOMATOESButton);
        drinkMenu = new JPanel();
        drinkMenu.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        drinkMenu.setBackground(new Color(-1644826));
        MenuOptionCards.add(drinkMenu, "drinks");
        final JPanel panel22 = new JPanel();
        panel22.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        drinkMenu.add(panel22, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel23 = new JPanel();
        panel23.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel22.add(panel23, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        BOTTLEDButton = new JButton();
        BOTTLEDButton.setBackground(new Color(-1644826));
        BOTTLEDButton.setMinimumSize(new Dimension(0, 30));
        BOTTLEDButton.setText("BOTTLED");
        panel23.add(BOTTLEDButton);
        WATERButton = new JButton();
        WATERButton.setBackground(new Color(-1644826));
        WATERButton.setMinimumSize(new Dimension(0, 30));
        WATERButton.setText("WATER");
        panel23.add(WATERButton);
        GATORADEButton = new JButton();
        GATORADEButton.setBackground(new Color(-1644826));
        GATORADEButton.setMinimumSize(new Dimension(0, 30));
        GATORADEButton.setText("GATORADE");
        panel23.add(GATORADEButton);
        final Spacer spacer2 = new Spacer();
        panel22.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel24 = new JPanel();
        panel24.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel22.add(panel24, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        FOUNTAINButton = new JButton();
        FOUNTAINButton.setBackground(new Color(-1644826));
        FOUNTAINButton.setMinimumSize(new Dimension(0, 30));
        FOUNTAINButton.setText("FOUNTAIN");
        panel24.add(FOUNTAINButton);
        final JPanel panel25 = new JPanel();
        panel25.setLayout(new CardLayout(0, 0));
        drinkMenu.add(panel25, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MenuOptionCards;
    }

    private enum PizzaType {
        one_topping,
        cheese,
        BYO
    }

    private PizzaType pizzaType;
    private MenuItem currentPizza;

    public void nextCard() {
        ((CardLayout) MenuOptionCards.getLayout()).next(MenuOptionCards);
    }

    private void resetPizzaOptions() {
        for (JToggleButton option : pizzaOptions) {
            option.setSelected(false);
        }
    }

    private void enablePizzaOptions(java.util.List<JToggleButton> options) {
        for (JToggleButton option : options) {
            option.setEnabled(true);
        }
    }

    private void enablePizzaOptions() {
        enablePizzaOptions(pizzaOptions);
    }

    private void disablePizzaOptions(java.util.List<JToggleButton> options) {
        for (JToggleButton option : options) {
            option.setEnabled(true);
        }
    }

    private void disablePizzaOptions() {
        disablePizzaOptions(pizzaOptions);
    }

    public MenuOptions() {

        cheeseButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                // create cheese pizza order item and trigger Actions.addMenuItem
                Database db = Actions.getDatabase.getValue();
                if (db == null) {
                    System.out.println("database is null");
                    return;
                }

                edu.tamu.spinnstone.models.MenuItem menuItem = new edu.tamu.spinnstone.models.MenuItem(db);


                try {
                    ResultSet rs = db.select("*").from(menuItem.tableName)
                            .where(
                                    edu.tamu.spinnstone.models.MenuItem.ColumnNames.ITEM_NAME.toString(),
                                    edu.tamu.spinnstone.models.MenuItem.ItemNames.ORGINAL_CHEESE_PIZZA.toString()
                            ).execute();

                    if (rs.next()) {
                        menuItem.updateFromResultSet(rs);
                    } else {
                        System.out.println("unkown pizza type:");
                        return;
                    }

                } catch (Exception ex) {
                    System.out.println("Error trying to get pizza menu item: " + ex.getMessage());
                    return;
                }

                OrderItem orderItem = new OrderItem(db);
                orderItem.menuItemId = menuItem.menuItemId;
                // no orderid yet (until it is finalized)

                Actions.addOrderItem.onNext(orderItem);

                pizzaType = PizzaType.cheese;
                resetPizzaOptions();
                disablePizzaOptions();
                enablePizzaOptions(sauceOptions);
                enablePizzaOptions(crustOptions);

                nextCard();
            }
        });
        a1ToppingButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                pizzaType = PizzaType.one_topping;
                resetPizzaOptions();
                enablePizzaOptions();
                nextCard();
            }
        });
        buildYourOwnButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                pizzaType = PizzaType.BYO;
                resetPizzaOptions();
                enablePizzaOptions();
                nextCard();
            }
        });

        sauceOptions = Arrays.asList(
                ALFREDOButton,
                TRADITIONALREDButton,
                ZESTYREDButton,
                NOSAUCEButton,
                HOUSEBLENDButton,
                PARMESANButton,
                BBQSAUCEButton
        );

        crustOptions = Arrays.asList(
                STANDARDButton,
                CAULIFLOWERButton
        );

        pizzaOptions = Arrays.asList(
                STANDARDButton,
                CAULIFLOWERButton,
                ALFREDOButton,
                TRADITIONALREDButton,
                ZESTYREDButton,
                NOSAUCEButton,
                HOUSEBLENDButton,
                PARMESANButton,
                BBQSAUCEButton,
                OLIVEOILButton,
                DICEDHAMButton,
                ITALIANSAUSAGEButton,
                MEATBALLButton,
                PEPPERONIButton,
                SALAMIButton,
                SMOKEDCHICKENButton,
                BANANAPEPPERSButton,
                BLACKOLIVESButton,
                GREENPEPPERSButton,
                JALAPENOSButton,
                MUSHROOMSButton,
                ONIONSButton,
                PINEAPPLEButton,
                ROASTEDGARLICButton,
                SPINACHButton,
                TOMATOESButton
        );


    }

}
